GIT Homework 1

JSON
4) Создать внешний репозиторий c названием JSON.
Precondition:
1. Пользователь авторизован с помощью логина и пароля на сайте https://github.com/
STR:
1. Нажать на кнопку "+" в верхнем правом углу
2. Выбрать и нажать из выпадающего списка на кнопку "new repository"
3. Заполнить "Repository name" текстом "JSON"
4. Поставить галочку в пункте "Add a README file"
5. Нажать кнопку "Create repository".

5) Клонировать репозиторий JSON на локальный компьютер.
git clone git@github.com:IdaVoitkus/JSON.git

6)Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json

7)Добавить файл под гит.
git add new.json

8)Закоммитить файл.
git commit -m "add a file new.json"

9) Отправить файл на внешний GitHub репозиторий.
git push

10)Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
{
   "firstName": "Ida",
   "lastName": "Voitkus",
   "Patronymic": "Anatolyevna",
   "Age": "25",
   "Number_of_pets": "1",
   "Future_desired_salary": "500 у.е."
}

11)Отправить изменения на внешний репозиторий.
git add 'new.json'
git commit -m "added information to the file about yourself"
git push

12)Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.
vim preferences.json
{
   "favorites": {
   "Movie": "Law abiding citizen",
   "Series": "Magnificent century",
   "Food": "Sushi",
   "Season": "Summer"
},
   "countryToVisit": "USA"
}

14)Создать файл skills.json, добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{
  "skills": [
    "1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.",
    "2. Что такое клиент-серверная архитектура.",
    "3. HTTP Методы запросов на сервер.",
    "4. Коды ответов HTTP сервера.",
    "5. Структуры HTTP запросов и ответов.",
    "6. Что такое JSON, XML. Их структура.",
    "7. Тестирование API через Postman (JS, автотесты API).",
    "8. Снятие и чтение логов c внешнего сервера.",
    "9. Снифинг http web трафика через Charles и Fiddler.",
    "10. Dev Tools веб браузеров (Google Chrome, FireFox).",
    "11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)",
    "12. Мобильное тестирование.",
    "13. Особенность iOS, Android, гайдлайны.",
    "14. Сборка iOS приложений на XCode.",
    "15. Сборка Android приложений на Android Studio.",
    "16. ADB (управление андройд девайсами).",
    "17. Настройка прокси и vpn на iOS и Android.",
    "18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.",
    "19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)",
    "20. Основы bash скриптинг, автоматизация рутинных задач на сервере.",
    "21. Доступ к удалённым серверам.",
    "22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).",
    "23. База данных Postgres (установка, настройка и использование).",
    "24. Нереляционная база данных Redis (установка, настройка и использование).",
    "25. Нагрузочное тестирование в Jmeter.",
    "26. Методология разработки Scrum."
  ]
}

15)Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json
git commit -m "add two files"
git push

16) На веб интерфейсе создать файл bug_report.json.
Precondition: Пользователь авторизован, открыт репозиторий JSON
STR:
1. Нажать кнопку "Add file"
2. Выбрать и нажать из выпадающего списка на кнопку "Create new file"
3. Заполнить "Name your file" текстом "bug_report.json"
5. Нажать кнопку "Commit new file".

17)Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit new file".

18)На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
   "Name": "Bug report",
   "Summary": "Programm main menu: the Edit button is named incorrectly, as an Edjt",
   "STR": "Open  the 'ListBoxer' programm",
   "Result": "The Edit button is named as an Edjt",
   "Expected result": "The Edit button is named as an Edit",
   "Reporter": "Ida Voitkus",
   "Priority": "Lowest",
   "Environment": "Windows 10 Home, х64,Google Chrome v98.0.4758.102"
}

19)Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit changes".

20)Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
21)Создать внешний репозиторий c названием XML.
Precondition:
1. Пользователь авторизован с помощью логина и пароля на сайте https://github.com/
STR:
1. Нажать на кнопку "+" в верхнем правом углу
2. Выбрать и нажать из выпадающего списка на кнопку "new repository"
3. Заполнить "Repository name" текстом "XML"
4. Поставить галочку в пункте "Add a README file"
5. Нажать кнопку "Create repository".

22)Клонировать репозиторий XML на локальный компьютер.
git clone git@github.com:IdaVoitkus/XML.git

23)Внутри локального XML создать файл “new.xml”.
cd XML
touch new.xml

24)Добавить файл под гит.
git add new.xml

25)Закоммитить файл.
git commit -m "add a file new.xml"

26)Отправить файл на внешний GitHub репозиторий.
git push

27)Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
<About_myself>
<firstName>Ida</firstName>
<lastName>Voitkus</lastName>
<Patronymic>Anatolyevna</Patronymic>
<Age>25</Age>
<Number_of_pets>1</Number_of_pets>
<Future_desired_salary>500 у.е.</Future_desired_salary>
</About_myself>

28)Отправить изменения на внешний репозиторий.
git add 'new.xml'
git commit -m "added information to the file about myself"
git push

29)Создать файл preferences.xml
touch preferences.xml

30)В файл preferences.xml добавить информацию о своих предпочтениях(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
<favorites>
    <Movie>Law abiding citizen</Movie>
    <Series>Magnificent century</Series>
    <Food>Sushi</Food>
    <Season>Summer</Season>
</favorites>
<countryToVisit>USA</countryToVisit>

31)Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > skills.xml
<skills>
    <skill>1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.</skill>
    <skill>2. Что такое клиент-серверная архитектура.</skill>
    <skill>3. HTTP Методы запросов на сервер.</skill>
    <skill>4. Коды ответов HTTP сервера.</skill>
    <skill>5. Структуры HTTP запросов и ответов.</skill>
    <skill>6. Что такое JSON, XML. Их структура.</skill>
    <skill>7. Тестирование API через Postman (JS, автотесты API).</skill>
    <skill>8. Снятие и чтение логов c внешнего сервера.</skill>
    <skill>9. Снифинг http web трафика через Charles и Fiddler.</skill>
    <skill>10. Dev Tools веб браузеров (Google Chrome, FireFox).</skill>
    <skill>11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)</skill>
    <skill>12. Мобильное тестирование.</skill>
    <skill>13. Особенность iOS, Android, гайдлайны.</skill>
    <skill>14. Сборка iOS приложений на XCode.</skill>
    <skill>15. Сборка Android приложений на Android Studio.</skill>
    <skill>16. ADB (управление андройд девайсами).</skill>
    <skill>17. Настройка прокси и vpn на iOS и Android.</skill>
    <skill>18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.</skill>
    <skill>19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)</skill>
    <skill>20. Основы bash скриптинг, автоматизация рутинных задач на сервере.</skill>
    <skill>21. Доступ к удалённым серверам.</skill>
    <skill>22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).</skill>
    <skill>23. База данных Postgres (установка, настройка и использование).</skill>
    <skill>24. Нереляционная база данных Redis (установка, настройка и использование).</skill>
    <skill>25. Нагрузочное тестирование в Jmeter.</skill>
    <skill>26. Методология разработки Scrum.</skill>
</skills>

32)Сделать коммит в одну строку.
git add . && git commit -m "add two new files"
или
git commit -am "add two new files"

33)Отправить сразу 2 файла на внешний репозиторий.
git push

34)На веб интерфейсе создать файл bug_report.xml.
Precondition: Пользователь авторизован, открыт репозиторий XML
STR:
1. Нажать кнопку "Add file"
2. Выбрать и нажать из выпадающего списка на кнопку "Create new file"
3. Заполнить "Name your file" текстом "bug_report.xml"
5. Нажать кнопку "Commit new file".

35)Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit new file".

36)На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<Bugreport>
   <Name>Bug report</Name>
   <Summary>Programm main menu: the Edit button is named incorrectly, as an Edjt</Summary>
   <STR>Open  the 'ListBoxer' programm</STR>
   <Result>The Edit button is named as an Edjt</Result>
   <Expected_result>The Edit button is named as an Edit</Expected_result>
   <Reporter>Ida Voitkus</Reporter>
   <Priority>Lowest</Priority>
   <Environment>Windows 10 Home, х64,Google Chrome v98.0.4758.102</Environment>
</Bugreport>

37)Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit changes".

38)Синхронизировать внешний и локальный репозиторий XML
git pull


TXT
1)Создать внешний репозиторий c названием TXT.
Precondition:
1. Пользователь авторизован с помощью логина и пароля на сайте https://github.com/
STR:
1. Нажать на кнопку "+" в верхнем правом углу
2. Выбрать и нажать из выпадающего списка на кнопку "new repository"
3. Заполнить "Repository name" текстом "TXT"
4. Поставить галочку в пункте "Add a README file"
5. Нажать кнопку "Create repository".

2)Клонировать репозиторий TXT на локальный компьютер.
git clone git@github.com:IdaVoitkus/TXT.git

3)Внутри локального TXT создать файл “new.txt”.
cd TXT
touch new.txt

4)Добавить файл под гит.
git add new.txt

5)Закоммитить файл.
git commit -m "add a file new.txt"

6) Отправить файл на внешний GitHub репозиторий.
git push

7) Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt
Информация о себе 
Фамилия Войткус
Имя Ида
Отчество Анатольевна
Возраст 25
Количество домашних животных 1
Будущая желаемая зарплата 500 у.е.

8)Отправить изменения на внешний репозиторий.
git add 'new.txt'
git commit -m "added information to the file about yourself"
git push

9)Создать файл preferences.txt
touch preferences.txt

10)В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
Мои предпочтения
Любимый фильм Законопослушный гражданин
Любимый сериал Великолепный век
Любимая еда Суши
Любимое время года Лето
Страна, которую хотели бы посетить США

11)Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat > skills.txt
Skills
1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.

12)Сделать коммит в одну строку.
git add . && git commit -m "add two new files"

13)Отправить сразу 2 файла на внешний репозиторий.
git push

14)На веб интерфейсе создать файл bug_report.txt.
Precondition: Пользователь авторизован, открыт репозиторий XML
STR:
1. Нажать кнопку "Add file"
2. Выбрать и нажать из выпадающего списка на кнопку "Create new file"
3. Заполнить "Name your file" текстом "bug_report.txt"
5. Нажать кнопку "Commit new file".

15)Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit new file".

16)На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Name Bug report
Summary Programm main menu: the "Edit" button is named incorrectly, as an "Edjt" 
STR Open  the "ListBoxer" programm
Result The "Edit" button is named as an “Edjt"
Expected result The "Edit" button is named as an “Edit"
Reporter Ida Voitkus
Priority Lowest
Environment Windows 10 Home, х64,Google Chrome v98.0.4758.102

17)Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать кнопку "Commit new file".

18)Синхронизировать внешний и локальный репозиторий TXT
git pull